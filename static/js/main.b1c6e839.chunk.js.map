{"version":3,"sources":["api/axiosClient.js","api/userApi.js","pages/GoogleMap/index.js","pages/Login/index.js","components/Table.js","pages/Home/constants.js","pages/Home/index.js","App.js","reportWebVitals.js","index.js"],"names":["axiosClient","axios","create","baseURL","headers","paramsSerializer","params","queryString","stringify","interceptors","request","use","a","config","response","data","error","UserAPI","getAllUser","get","postUser","post","deleteUser","id","delete","MapContainer","props","handleChange","address","setState","handleSelect","geocodeByAddress","then","results","getLatLng","latLng","console","log","mapCenter","catch","state","showingInfoWindow","activeMarker","selectedPlace","lat","lng","value","this","onChange","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","google","initialCenter","center","position","Component","GoogleApiWrapper","apiKey","Login","history","useHistory","useState","setData","loadingBtn","setLoadingBtn","listUsers","setListUsers","errorExistAcc","setErrorExistAcc","handleOnChange","useEffect","newListUsers","fetchListUser","isRequired","isPhoneNumber","phone","test","String","toLowerCase","isEmail","email","errorMessage","validateFunc","handleSubmit","find","item","name","push","Avatar","customer","fontSize","fontWeight","FormLayout","TextField","label","type","sitekey","callback","expiredCallback","locale","Button","primary","onClick","TableCustom","listData","listHeadings","listSort","sortedRows","setSortedRows","rows","handleSort","useCallback","index","direction","sort","rowA","rowB","amountA","parseFloat","amountB","sortCurrency","Page","title","Card","DataTable","columnContentTypes","headings","sortable","defaultSortDirection","initialSortColumnIndex","onSort","limitRange","Home","limit","setLimit","nowPage","setNowPage","isFetchUser","setIsFetchUser","errorToast","setErrorToast","successToast","setSuccessToast","ActionsComponent","user","handleDeleteUser","res","e","monochrome","outline","dataUsers","Object","values","pageLength","splice","window","open","focus","Math","ceil","length","panigationPage","padding","width","page","startIndex","finishIndex","slice","renderData","Select","options","color","Pagination","hasPrevious","onPrevious","hasNext","onNext","height","Frame","Toast","content","onDismiss","App","exact","from","to","path","component","HomePage","GoogleMap","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","AppProvider","i18n","en","theme","colorScheme","document","getElementById"],"mappings":"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","file":"static/js/main.b1c6e839.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport queryString from \"query-string\";\r\n// Set up default config for http requests here\r\n\r\n// Please have a look at here `https://github.com/axios/axios#request-\r\n// config` for the full list of configs\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: \"https://60b7a92ab54b0a0017c027d3.mockapi.io/users\",\r\n  headers: {\r\n    \"content-type\": \"application/json\"\r\n  },\r\n  paramsSerializer: (params) => queryString.stringify(params)\r\n});\r\n\r\naxiosClient.interceptors.request.use(async (config) => {\r\n  // Handle token here ...\r\n  return config;\r\n});\r\naxiosClient.interceptors.response.use(\r\n  (response) => {\r\n    if (response && response.data) {\r\n      return response.data;\r\n    }\r\n    return response;\r\n  },\r\n  (error) => {\r\n    // Handle errors\r\n    throw error;\r\n  }\r\n);\r\nexport default axiosClient;\r\n","import axiosClient from \"./axiosClient\";\r\nconst url = \"\";\r\n\r\nconst UserAPI = {\r\n  getAllUser: () => {\r\n    return axiosClient.get(url);\r\n  },\r\n  postUser: (data) => {\r\n    return axiosClient.post(url, data)\r\n  },\r\n  deleteUser: (id) => {\r\n    return axiosClient.delete(`${url}/${id}`)\r\n  }\r\n};\r\nexport default UserAPI;\r\n","import React, { Component } from 'react';\r\nimport {Map, Marker, GoogleApiWrapper} from 'google-maps-react';\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from 'react-places-autocomplete';\r\n\r\nexport class MapContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // for google map places autocomplete\r\n      address: '',\r\n\r\n      showingInfoWindow: false,\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n  \r\n      mapCenter: {\r\n        lat: 49.2827291,\r\n        lng: -123.1207375\r\n      }\r\n    };\r\n  }\r\n\r\n  handleChange = address => {\r\n    this.setState({ address });\r\n  };\r\n \r\n  handleSelect = address => {\r\n    this.setState({ address });\r\n    geocodeByAddress({address})\r\n      .then(results => getLatLng(results[0]))\r\n      .then(latLng => {\r\n        console.log('Success', latLng);\r\n\r\n        // update center state\r\n        this.setState({ mapCenter: latLng });\r\n      })\r\n      .catch(error => console.error('Error', error));\r\n  };\r\n \r\n  render() {\r\n    return (\r\n      <div id='googleMaps'>\r\n        <PlacesAutocomplete\r\n          value={this.state.address}\r\n          onChange={this.handleChange}\r\n          onSelect={this.handleSelect}\r\n        >\r\n          {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n            <div>\r\n              <input\r\n                {...getInputProps({\r\n                  placeholder: 'Search Places ...',\r\n                  className: 'location-search-input',\r\n                })}\r\n              />\r\n              <div className=\"autocomplete-dropdown-container\">\r\n                {loading && <div>Loading...</div>}\r\n                {suggestions.map(suggestion => {\r\n                  const className = suggestion.active\r\n                    ? 'suggestion-item--active'\r\n                    : 'suggestion-item';\r\n                  // inline style for demonstration purpose\r\n                  const style = suggestion.active\r\n                    ? { backgroundColor: '#fafaf9', cursor: 'pointer' }\r\n                    : { backgroundColor: '#fffff7', cursor: 'pointer' };\r\n                  return (\r\n                    <div\r\n                      {...getSuggestionItemProps(suggestion, {\r\n                        className,\r\n                        style,\r\n                      })}\r\n                    >\r\n                      <span>{suggestion.description}</span>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </PlacesAutocomplete>\r\n\r\n        <Map \r\n          google={this.props.google}\r\n          initialCenter={{\r\n            lat: this.state.mapCenter.lat,\r\n            lng: this.state.mapCenter.lng\r\n          }}\r\n          center={{\r\n            lat: this.state.mapCenter.lat,\r\n            lng: this.state.mapCenter.lng\r\n          }}\r\n        >\r\n          <Marker \r\n            position={{\r\n              lat: this.state.mapCenter.lat,\r\n              lng: this.state.mapCenter.lng\r\n            }} />\r\n        </Map>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: ('AIzaSyB0eD7HrvyoF_VNj1zqlhS8EAzphj_6_eY')\r\n})(MapContainer)","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport {Avatar, FormLayout, TextField, Button} from '@shopify/polaris';\r\nimport ReCAPTCHA from 'react-grecaptcha'\r\nimport UserAPI from \"../../api/userApi\";\r\nimport {useHistory} from \"react-router-dom\"\r\nimport GoogleMap from \"../GoogleMap\";\r\n\r\n\r\nconst Login = (props) => {\r\n    const history = useHistory()\r\n\r\n    const [data, setData] = useState({});\r\n    const [loadingBtn, setLoadingBtn] = useState(false);\r\n    const [listUsers, setListUsers] = useState([]);\r\n    const [errorExistAcc, setErrorExistAcc] = useState(false)\r\n\r\n    const handleOnChange = (value,id) => {\r\n        setData({...data,[id]: value});\r\n\r\n    }\r\n    useEffect(() => {\r\n        const fetchListUser = async() => {\r\n            const newListUsers = await UserAPI.getAllUser();\r\n            setListUsers(newListUsers)\r\n        }\r\n        fetchListUser()\r\n    },[])\r\n    // validate function\r\n    const isRequired = (value) => {\r\n        if(!value) {\r\n            return true\r\n        }\r\n    }\r\n    const isPhoneNumber = (phone) => {\r\n        const re = /((09|03|07|08|05)+([0-9]{8})\\b)/g\r\n        return !re.test(String(phone).toLowerCase());\r\n    }\r\n    const isEmail = (email) => {\r\n        const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        return !re.test(String(email).toLowerCase());\r\n    }\r\n\r\n    const errorMessage = (value, validateFunc) => {\r\n        switch (validateFunc) {\r\n            case isRequired:\r\n                return validateFunc(value) ? \"Field is Required\" : \"\";\r\n            case isPhoneNumber:\r\n                return validateFunc(value) ? \"Phone is not right !\" : \"\";\r\n            case isEmail:\r\n                return validateFunc(value) ? \"E mail is not right !\" : \"\";\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    // function submit\r\n    const handleSubmit = async(data) => {\r\n        setLoadingBtn(true)\r\n        if(listUsers.data.find(item => item.email === data.email )){\r\n            setErrorExistAcc(true);\r\n\r\n        }else {\r\n            if(data.name && data.address && data.email && data.phone ){\r\n                await UserAPI.postUser(data);\r\n                await setLoadingBtn(false)\r\n                await history.push(\"/home\");\r\n            }\r\n            else{\r\n                setLoadingBtn(false)\r\n            }\r\n        }\r\n            // else{\r\n            //     setLoadingBtn(false)\r\n            // }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login_form\">\r\n                <div className=\"avatar\">\r\n                    <Avatar customer name=\"Avatar\" />\r\n                </div>\r\n                <h2 style={{fontSize:\"25px\",fontWeight:\"500\"}}>SIGN UP</h2>\r\n                <FormLayout>\r\n                    <TextField \r\n                        label=\"Name\" \r\n                        id=\"name\"  \r\n                        value={data.name}\r\n                        error={errorMessage(data.name,isRequired)} \r\n                        onChange={handleOnChange} \r\n                    />\r\n                    <TextField \r\n                        label=\"Address\" \r\n                        id=\"address\" \r\n                        value={data.address} \r\n                        onChange={handleOnChange}\r\n                        error={errorMessage(data.address, isRequired)} \r\n                    />\r\n                    <TextField \r\n                        label=\"Email\" \r\n                        id=\"email\" \r\n                        type=\"email\"\r\n                        value={data.email} \r\n                        onChange={handleOnChange}\r\n                        error={errorMessage(data.email, isEmail)} \r\n                    />\r\n                    <TextField \r\n                        label=\"Phone\" \r\n                        id=\"phone\"\r\n                        type=\"number\" \r\n                        type=\"phone\"\r\n                        value={data.phone} \r\n                        onChange={handleOnChange}\r\n                        error={errorMessage(data.phone, isPhoneNumber)} \r\n                    />\r\n                    <ReCAPTCHA\r\n                        sitekey=\"6LeTci8UAAAAAAZV-D4OGD9x7VJvBUQ8QJDT9N4X\"\r\n                        callback={() => console.log(\"callback\")}\r\n                        expiredCallback={() => console.log(\"expried callback\")}\r\n                        locale=\"en\"\r\n                    />\r\n                    \r\n                    <Button primary loading={loadingBtn} type=\"submit\" onClick={() => handleSubmit(data)}>Submit</Button>\r\n                    {errorExistAcc && <p>Email existed! Let's enter another email to sign in!</p>}\r\n                </FormLayout>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Login","import React, {useCallback, useState} from 'react';\r\nimport {Card, DataTable, Page} from '@shopify/polaris';\r\n\r\nexport default function TableCustom(props) {\r\n  const {listData, listHeadings, listSort} = props;\r\n   \r\n\r\n  const [sortedRows, setSortedRows] = useState(null);\r\n\r\n  const initiallySortedRows = listData\r\n  const rows = sortedRows ? sortedRows : initiallySortedRows;\r\n\r\n  const handleSort = useCallback(\r\n    (index, direction) => setSortedRows(sortCurrency(rows, index, direction)),\r\n    [rows],\r\n  );\r\n\r\n  return (\r\n    <Page title=\"Sales by product\">\r\n      <Card>\r\n        <DataTable\r\n          columnContentTypes={[\r\n          ]}\r\n          headings={listHeadings}\r\n          rows={rows}\r\n          sortable={listSort}\r\n          defaultSortDirection=\"descending\"\r\n          initialSortColumnIndex={4}\r\n          onSort={handleSort}\r\n        />\r\n      </Card>\r\n    </Page>\r\n  );\r\n\r\n  function sortCurrency(rows, index, direction) {\r\n    return [...rows].sort((rowA, rowB) => {\r\n      const amountA = parseFloat(rowA[index]);\r\n      const amountB = parseFloat(rowB[index]);\r\n\r\n      return direction === 'descending' ? amountB - amountA : amountA - amountB;\r\n    });\r\n  }\r\n}\r\n","export const listHeadings = [ 'Id', 'Name', 'Address', 'Email', 'Phone','Actions'];\r\nexport const listSort = [ true, true, false, false, ]\r\nexport const limitRange= [\r\n    {label:\"5\", value:\"5\"},\r\n    {label:\"10\", value:\"10\"},\r\n    {label:\"20\", value:\"20\"}\r\n]\r\n","import { Button, Frame, Icon, Pagination, Select, Toast } from \"@shopify/polaris\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport UserAPI from \"../../api/userApi\";\r\nimport TableCustom from \"../../components/Table\";\r\nimport { limitRange, listHeadings, listSort } from \"./constants\";\r\nimport \"./index.scss\";\r\nimport {\r\n    MobileBackArrowMajor\r\n} from '@shopify/polaris-icons';\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\n\r\nconst Home = (props) => {\r\n    const [listUsers, setListUsers] = useState([]);\r\n    const [limit, setLimit] = useState(5);\r\n    const [nowPage, setNowPage] = useState(1);\r\n    const [isFetchUser, setIsFetchUser] = useState(false);\r\n    const [errorToast, setErrorToast] = useState(false);\r\n    const [successToast, setSuccessToast] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const ActionsComponent = (props) => {\r\n        const {user} = props;\r\n        const handleDeleteUser = async() => {\r\n             await UserAPI.deleteUser(user[0])\r\n             .then(res => setIsFetchUser(!isFetchUser))\r\n             .then(() => setSuccessToast(true))\r\n             .catch(e => setErrorToast(true))\r\n        }\r\n        return (\r\n            <div className=\"actions\">\r\n                <div className=\"delete_btn\">\r\n                    <Button \r\n                        monochrome outline\r\n                        onClick={() => handleDeleteUser(user)}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    // fetch list Users\r\n    useEffect(() => {\r\n        const fetchListUser = async() => {\r\n            await UserAPI.getAllUser()\r\n            .then((res) => setListUsers(res));\r\n        }\r\n        fetchListUser()\r\n    },[isFetchUser])\r\n    \r\n    const handlePushToMap = () => {\r\n        const win = window.open(\"/map\", \"_blank\");\r\n         win.focus();\r\n    }\r\n\r\n    const dataUsers = listUsers.data ? listUsers.data.map(item => Object.values(item)) : [];\r\n    // render action delete button\r\n    const newDataUsers = dataUsers.map(item => \r\n        {\r\n            item.push( <ActionsComponent user={item} />);\r\n            item.splice(2,1,<p style={{cursor:\"pointer\"}} onClick={() => handlePushToMap(item[2])}>{item[2]}</p>)\r\n        })\r\n    const pageLength = Math.ceil(dataUsers.length / limit);\r\n    const panigationPage = <span style={{padding:\"0 10px\"}}>{nowPage}</span>;\r\n    // render Data by panigation and limit \r\n    const renderData = (page, limit, pageLength, data) => {\r\n        let startIndex = (page-1) * (+limit);\r\n        let finishIndex = startIndex + (+limit );\r\n        console.log(finishIndex)\r\n        if(finishIndex > data.length) {\r\n            finishIndex = data.length\r\n        }\r\n        console.log(startIndex, finishIndex,page,limit,pageLength,data)\r\n        return data.slice(startIndex,finishIndex)\r\n    }\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"home_container\">\r\n                <div onClick={() => history.push(\"/login\")} className=\"back_login\">\r\n                   <Button>Back to Login !</Button>\r\n                </div>\r\n                <p className=\"title\">List Users</p>\r\n                <TableCustom \r\n                    style={{width:\"100%\"}}\r\n                    listData={renderData(nowPage,limit,pageLength,dataUsers)}\r\n                    listHeadings={listHeadings}\r\n                    listSort= {listSort}\r\n                />\r\n                <div className=\"footer\">\r\n                    <Select\r\n                        options={limitRange}\r\n                        onChange={(value) => setLimit(value)}\r\n                        value={limit}\r\n                    />\r\n                    <p style={{color:\"black\"}}>Show page {nowPage} of {pageLength} pages</p>\r\n                    <div className=\"panigation\">\r\n                        <Pagination\r\n                            label={panigationPage}\r\n                            hasPrevious\r\n                            onPrevious={() => {\r\n                                nowPage > 1 ? setNowPage(page => page - 1) : setNowPage(1)\r\n                            }}\r\n                            hasNext\r\n                            onNext={() => {\r\n                                nowPage < pageLength ? setNowPage(page => page + 1) : setNowPage(pageLength)\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div style={{height:\"0px\"}}>\r\n                    <Frame>\r\n                        {errorToast ? <Toast content=\"Delete Failed !\" error onDismiss={() => setErrorToast(!errorToast)} /> : null}\r\n                        {successToast ? <Toast content=\"Delete Success !\"  onDismiss={() => setSuccessToast(!successToast)} /> : null}\r\n                    </Frame>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","\nimport './App.css';\nimport React from \"react\"\nimport {BrowserRouter, Switch, Route, Redirect} from \"react-router-dom\";\nimport Login from \"./pages/Login\"\nimport HomePage from \"./pages/Home\";\nimport GoogleMap from './pages/GoogleMap';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Switch>\n            <Redirect exact from=\"/\" to=\"/login\"/>\n            <Route path= \"/login\" component={Login} />\n            <Route path=\"/home\" component={HomePage} />\n            <Route path=\"/map\" component={GoogleMap} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {AppProvider} from \"@shopify/polaris\";\nimport en from '@shopify/polaris/locales/en.json';\n\nimport \"@shopify/polaris/dist/styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AppProvider i18n={en} theme={{colorScheme: \"light\"}}>\n       <App />\n    </AppProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}